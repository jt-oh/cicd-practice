# This is a basic workflow to help you get started with Actions

name: GithubAction - AWS CodeDeploy CD Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Configute AWS Credentials with AWS CodeDeploy Role
      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # The audience to use for the OIDC provider
#           audience: # optional, default is sts.amazonaws.com
          # AWS Access Key ID. This input is required if running in the GitHub hosted environment. It is optional if running in a self-hosted environment that already has AWS credentials, for example on an EC2 instance.
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          # AWS Secret Access Key. This input is required if running in the GitHub hosted environment. It is optional if running in a self-hosted environment that already has AWS credentials, for example on an EC2 instance.
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # AWS Session Token
#           aws-session-token: # optional
          # AWS Region, e.g. us-east-2
          aws-region: ap-northeast-1
          # Whether to set the AWS account ID for these credentials as a secret value, so that it is masked in logs. Valid values are 'true' and 'false'. Defaults to true
#           mask-aws-account-id: # optional
          # Use the provided credentials to assume an IAM role and configure the Actions environment with the assumed role credentials rather than with the provided credentials
#           role-to-assume: ${{ secrets.AWS_CODEDEPLOY_ROLE }}
          # Use the web identity token file from the provided file system path in order to assume an IAM role using a web identity. E.g., from within an Amazon EKS worker node
#           web-identity-token-file: # optional
          # Role duration in seconds (default: 6 hours)
#           role-duration-seconds: # optional
          # Role session name (default: GitHubActions)
#           role-session-name: # optional
          # The external ID of the role to assume
#           role-external-id: # optional
          # Skip session tagging during role assumption
#           role-skip-session-tagging: # optional

      # Puah Revision to AWS S3
      - name: Push Revision to AWS S3
        run: aws deploy push
          --application-name GithubActionTest
          --s3-location ${{ secrets.AWS_S3_BUCKET }}/GithubActionTest/github_action_test_$GITHUB_SHA
          --ignore-hidden-files
          
      # Deploy to EC2 Instances
      - name: Deploy to EC2 Instances
        run: aws deploy create-deployment
          --application-name GithubActionTest
          --deployment-group-name GithubActionTestEC2Instances
          --s3-location bucket=${{ secrets.AWS_S3_BUCKET }},key=GithubActionTest/github_action_test_$GITHUB_SHA,bundleType=zip
